/*
 * keypad_development.c
 *
 *  Created on: 21 sept. 2022
 *      Author: asumo
 */
#include "keypad_development.h"

//------------------REIMPLEMENTAR---------------------
/*
void initKeyPad(uint16_t* row_pins_in,uint16_t* col_pins_in){
	row_pins = row_pins_in;
	col_pins = col_pins_in;
	for (int i =0;i<4;i++)
	{
		HAL_GPIO_WritePin(row_ports[i],row_pins[i],GPIO_PIN_SET);
	}


}*/
void initKeyPad(){
	for (int i =0;i<4;i++)
		{
			HAL_GPIO_WritePin(row_ports[i],row_pins[i],GPIO_PIN_SET);
		}
}
char readKeyPad()
{
	char key_default = 111;
	for (int i =0;i<4;i++){
		for (int j =0;j<4;j++){
			if (i==j)
				HAL_GPIO_WritePin(row_ports[i],row_pins[i],GPIO_PIN_RESET);

			else{
				HAL_GPIO_WritePin(row_ports[j],row_pins[j],GPIO_PIN_SET);
			}
		}

		char key_pressed = getKeyPad();
		if (key_pressed !=111){
			return key_pressed+4*i;
		}
	}
	return key_default;
}

char getKeyPad(){
	char key_default = 111;
		for (int i =0;i<4;i++){
			if (HAL_GPIO_ReadPin(col_ports[i],col_pins[i]) == GPIO_PIN_RESET)
				return (char)i;
		}
	return key_default;
}

char interfaceValueKey(char value_pressed){

	switch (value_pressed){
	default:break;
	}
	return 0;
}
